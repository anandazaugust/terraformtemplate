name: newtfplan
on: 
  workflow_dispatch:
  workflow_call:
    
  #  inputs: 
  #     choose-env: 
  #      description: test
  #      required: true
  #      type: string
  #      default: dev
env: 
#  ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
#  ARM_CLIENT_ID      : "${{ secrets.ARM_CLIENT_ID }}"
#  ARM_CLIENT_SECRET   : "${{ secrets.ARM_CLIENT_SECRET }}"
 TF_WORKSPACE : "api-workspace"
 TF_TOKEN_app_terraform_io : "${{ secrets.TF_API_TOKEN }}"
#  TF_API_TOKEN : "Es59plk79rxzCQ.atlasv1.DeGIp7BOagPyZFkN3Xfs1cC5mt4CG0OxnMIvJ8gOyHfpy16CK7bctQSBZhpUw9AerSA"     
permissions:
 id-token: write
 contents: read

jobs: 

  # azure_login: 
  #   runs-on: ubuntu-latest
  #   name: azlogin
  #   # environment: dev
  #   steps:

  #      - name: azure_login
  #        uses: azure/login@v2
  #        with:
  #         client-id: "3071f7cd-0553-4cd6-8303-d467147aafcc"
  #         tenant-id: "17a09c66-f406-4897-8b24-51f5313623dc"
  #         subscription-id: "6e54aa79-9b0b-40ed-ae27-91fdffa0a565"
 

 

  terra_validate: 
    runs-on: ubuntu-latest
    name: terraform_validate_job
    needs: azure_login
    # environment: dev
    steps:

     - name: Checkout
       uses: actions/checkout@v3

     - name: terraform_validate
       working-directory: ./terraform
       run: |
         terraform init
         terraform validate

  terra_plan: 
    runs-on: ubuntu-latest
    name: terraform_plan_job

    
    # environment: dev
    needs: terra_validate
    
    
    steps:
      #  name: Checkout
    #    uses: actions/checkout@v3
    #  - name: terraform_plan
      #  working-directory: ./terraform
       - uses: actions/terraformtemplate@test
       
       - run: |
          terraform init
          terraform plan

   
  